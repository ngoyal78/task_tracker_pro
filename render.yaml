services:
  # Main web application
  - type: web
    name: task-tracker-pro
    runtime: python
    plan: free # Using the free plan (upgrade as needed)
    region: ohio # Choose an appropriate region
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    startCommand: gunicorn task_tracker_pro.wsgi:application --bind 0.0.0.0:$PORT
    healthCheckPath: /
    autoDeploy: true
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: task_tracker_pro.settings
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: "task-tracker-pro.onrender.com"
      - key: RENDER
        value: "True"
      - key: CSRF_TRUSTED_ORIGINS
        value: "https://task-tracker-pro.onrender.com"
      # Database connection
      # Option 1: Use fromDatabase property (recommended for new deployments)
      - key: DATABASE_URL
        fromDatabase:
          name: task-tracker-db
          property: connectionString
      
      # Option 2: If Option 1 doesn't work, comment it out and uncomment the line below
      # with your actual database connection string from the Render dashboard
      # - key: DATABASE_URL
      #   value: "postgres://task_user:password@dpg-xxxxx-a.region.render.com:5432/task_tracker"
      # AI model configuration
      - key: OLLAMA_BASE_URL
        value: "http://localhost:11434"  # Default to local Ollama instance for development
      - key: OLLAMA_MODEL
        value: "mistral"
      - key: WHISPER_ENABLED
        value: "False"
      # Optional environment variables (uncomment and configure as needed)
      # - key: EMAIL_HOST
      #   value: "smtp.gmail.com"
      # - key: EMAIL_PORT
      #   value: "587"
      # - key: EMAIL_USE_TLS
      #   value: "True"
      # - key: EMAIL_HOST_USER
      #   sync: false
      # - key: EMAIL_HOST_PASSWORD
      #   sync: false
      # - key: TWILIO_ACCOUNT_SID
      #   sync: false
      # - key: TWILIO_AUTH_TOKEN
      #   sync: false
      # - key: TWILIO_WHATSAPP_FROM
      #   sync: false

  # Note: The Ollama service below requires a paid plan on Render
  # For free Render accounts, comment out this service and use an external Ollama instance
  # or set up a local Ollama server for development
  
  # AI model service (Ollama) - REQUIRES PAID PLAN
  # - type: web
  #   name: task-tracker-ai
  #   runtime: docker
  #   plan: standard # Requires at least standard plan for memory requirements
  #   region: ohio # Choose an appropriate region
  #   dockerfilePath: ./Dockerfile.ollama
  #   autoDeploy: false # Manual deployment for AI service
  #   disk:
  #     name: ollama-models
  #     mountPath: /root/.ollama
  #     sizeGB: 10 # Adjust based on model size requirements
  #   envVars:
  #     - key: OLLAMA_HOST
  #       value: "0.0.0.0"
  #     - key: OLLAMA_MODELS
  #       value: "mistral" # Comma-separated list of models to pull

databases:
  - name: task-tracker-db
    plan: free # Using the free plan (upgrade as needed)
    region: ohio # Choose an appropriate region
    databaseName: task_tracker
    user: task_user
    ipAllowList: # Restrict access to specific IP addresses if needed
      - source: 0.0.0.0/0
        description: everywhere
